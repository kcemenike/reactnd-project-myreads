{"version":3,"sources":["BooksAPI.js","bin/Book.js","bin/Search.js","bin/Shelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","BookshelfChange","state","_this","props","bookshelf","onChange","e","setState","target","value","moveBookToShelf","console","log","this","react_default","a","createElement","className","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","smallThumbnail","Book_BookshelfChange","title","authors","length","BookSearch","_this$props","searchedBooks","clearSearch","Search_SearchBar","Search_SearchResults","Search","executeSearch","q","type","placeholder","SearchBar","react_router_dom","to","onClick","Search_Search","SearchResults","booksFiltered","error","map","bk","bin_Book","key","BookList","shelves","Shelf_BooksContent","BooksContent","Shelf_BookShelf","BookShelf","filter","friendlyName","BooksApp","showSearchPage","componentDidMount","BooksAPI","newBooks","alert","updateQuery","debounce","clearQuery","_this2","_this$state","react_router","exact","path","render","Shelf","bin_Search","React","ReactDOM","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.822b1c3e.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\n\r\nexport const Book = (props) => {\r\n  const { book, bookshelf, moveBookToShelf } = props;\r\n  console.log(\"book\", props);\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 192,\r\n              backgroundImage: `url(${book.imageLinks &&\r\n                book.imageLinks.smallThumbnail})`,\r\n            }}\r\n          />\r\n          <BookshelfChange\r\n            book={book}\r\n            bookshelf={bookshelf}\r\n            moveBookToShelf={moveBookToShelf}\r\n          />\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">\r\n          {book.authors &&\r\n            (book.authors.length === 1\r\n              ? book.authors[0]\r\n              : book.authors[0] + \" et al.\")}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nclass BookshelfChange extends Component {\r\n  // state stores current shelf\r\n  state = {\r\n    shelf: this.props.bookshelf,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    // console.log(\"previous\", this.state.shelf);\r\n    // e.preventDefault();\r\n    // Change shelf type\r\n    this.setState({\r\n      shelf: e.target.value,\r\n    });\r\n    this.props.moveBookToShelf(this.props.book, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    console.log(\"bookshelfchange\", this.props);\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select value={this.state.shelf} onChange={this.onChange}>\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Book from \"./Book\";\r\n\r\nclass BookSearch extends Component {\r\n  render() {\r\n    const {\r\n      searchedBooks,\r\n      books,\r\n      search,\r\n      clearSearch,\r\n      moveBookToShelf,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <SearchBar search={search} clearSearch={clearSearch} />\r\n        <SearchResults\r\n          searchedBooks={searchedBooks}\r\n          books={books}\r\n          moveBookToShelf={moveBookToShelf}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  executeSearch = (query) => this.props.search(query);\r\n  onChange = (e) => {\r\n    const q = e.target.value;\r\n    this.setState({ query: q }, this.executeSearch(q));\r\n  };\r\n  render() {\r\n    // console.log(\"search\", this.state, this.props);\r\n    // const { query } = this.state;\r\n    return (\r\n      <div className=\"search-books-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title or author\"\r\n          value={this.state.query}\r\n          onChange={this.onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const SearchBar = (props) => {\r\n  const { search, clearSearch } = props;\r\n  return (\r\n    <div className=\"search-books-bar\">\r\n      <Link to=\"/\">\r\n        <button className=\"close-search\" onClick={clearSearch}>\r\n          Close\r\n        </button>\r\n      </Link>\r\n      <Search search={search} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SearchResults = (props) => {\r\n  const { searchedBooks, books, moveBookToShelf } = props;\r\n  let booksFiltered = [];\r\n  if (searchedBooks.error) {\r\n    booksFiltered = [];\r\n  } else {\r\n    booksFiltered = searchedBooks.map((book) => {\r\n      books.map((bk) => {\r\n        if (bk.id === book.id) {\r\n          book.shelf = bk.shelf;\r\n        }\r\n        return bk;\r\n      });\r\n      return book;\r\n    });\r\n  }\r\n  console.log(\"searchResults\", props);\r\n\r\n  // console.log(\"booksFiltered\", booksFiltered);\r\n  return (\r\n    <div className=\"search-books-results\">\r\n      <ol className=\"books-grid\">\r\n        {!booksFiltered.error &&\r\n          booksFiltered.map((book) => (\r\n            <Book\r\n              key={book.id}\r\n              book={book}\r\n              moveBookToShelf={moveBookToShelf}\r\n              bookshelf={book.shelf ? book.shelf : \"none\"}\r\n            />\r\n          ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\nexport default BookSearch;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\n\r\nclass BookList extends Component {\r\n  render() {\r\n    // render a shelves component (props will be 'currently reading', 'want to read' and 'read', and books)\r\n    const { shelves, books, moveBookToShelf } = this.props;\r\n    // console.log(this.props);\r\n    return (\r\n      <div className=\"list-books\">\r\n        <h1>MyReads</h1>\r\n        <BooksContent\r\n          shelves={shelves}\r\n          books={books}\r\n          moveBookToShelf={moveBookToShelf}\r\n        />\r\n        <div className=\"open-search\">\r\n          <Link to=\"search\">\r\n            <button>Add a book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const BooksContent = (props) => {\r\n  // get shelves and their books (if any)\r\n  const { shelves, books, moveBookToShelf } = props;\r\n  // console.log(\"BooksContent\", props);\r\n  return (\r\n    <div className=\"list-books-content\">\r\n      <div>\r\n        {shelves.map((shelf) => (\r\n          <BookShelf\r\n            key={shelf.id}\r\n            books={books}\r\n            bookshelf={shelf}\r\n            moveBookToShelf={moveBookToShelf}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const BookShelf = (props) => {\r\n  // Get all books and the bookshelf from props\r\n  const { books, bookshelf, moveBookToShelf } = props;\r\n  // console.log(\"bookshelf\", props);\r\n  // Filter the books in the bookshelf\r\n  const booksFiltered = books.filter((book) => book.shelf === bookshelf.shelf);\r\n  // console.log(booksFiltered);\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{bookshelf.friendlyName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {booksFiltered.map((book) => (\r\n            <Book\r\n              key={book.id}\r\n              book={book}\r\n              bookshelf={bookshelf.shelf}\r\n              moveBookToShelf={moveBookToShelf}\r\n            />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n","import React from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\n// import { books } from \"./Data\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nimport BookSearch from \"./bin/Search\";\r\nimport BookList from \"./bin/Shelf\";\r\n\r\nclass BooksApp extends React.Component {\r\n  shelves = [\r\n    { id: 1, shelf: \"currentlyReading\", friendlyName: \"Currently Reading\" },\r\n    { id: 2, shelf: \"wantToRead\", friendlyName: \"Want to Read\" },\r\n    { id: 3, shelf: \"read\", friendlyName: \"Read\" },\r\n  ];\r\n\r\n  state = {\r\n    showSearchPage: false,\r\n    books: [],\r\n    searchedBooks: [],\r\n    // query: \"\",\r\n  };\r\n  componentDidMount = () => {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books: books });\r\n    });\r\n  };\r\n  // I thought about adding this move method to the BookList,\r\n  // But I need the move method to also be available for Search\r\n  // So the move method lives here\r\n  moveBookToShelf = (book, shelf) => {\r\n    BooksAPI.update(book, shelf);\r\n    let newBooks = [];\r\n    newBooks = this.state.books.filter((bk) => bk.id !== book.id);\r\n\r\n    if (shelf !== \"none\") {\r\n      book.shelf = shelf;\r\n      newBooks = newBooks.concat(book);\r\n    }\r\n    this.setState({\r\n      books: newBooks,\r\n    });\r\n    alert(`'${book.title}' has been moved to ${shelf}`);\r\n  };\r\n  updateQuery = debounce(10, false, (query) => {\r\n    if (query.length !== 0) {\r\n      BooksAPI.search(query).then((books) => {\r\n        this.setState({ searchedBooks: books });\r\n      });\r\n    } else {\r\n      this.setState({ searchedBooks: [] });\r\n    }\r\n  });\r\n  clearQuery = (query) => {\r\n    this.updateQuery(\"\");\r\n  };\r\n\r\n  render() {\r\n    // console.log(process.env.NODE_ENV);\r\n    const { books, searchedBooks } = this.state;\r\n    // console.log(\"bookapp\", this.state);\r\n    // console.log(books);\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <BookList\r\n              shelves={this.shelves}\r\n              books={books}\r\n              moveBookToShelf={this.moveBookToShelf}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          render={() => (\r\n            <BookSearch // render the Search part here\r\n              searchedBooks={searchedBooks}\r\n              books={books}\r\n              moveBookToShelf={this.moveBookToShelf}\r\n              search={this.updateQuery}\r\n              clearSearch={this.clearQuery}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={\"/myreads\"}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}